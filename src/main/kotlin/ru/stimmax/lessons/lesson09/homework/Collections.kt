package ru.stimmax.ru.stimmax.lessons.lesson09.homework

fun main() {

//Работа с массивами Arrays (БОЛЬШЕ ПОЛОВИНЫ ТОЧНО СДЕЛАНО, ТОВАРИЩ ПРОВЕРЯЮЩИЙ!!
    // println("Crying, shaking and throwing up")

//Создайте массив из 5 целых чисел и инициализируйте его значениями от 1 до 5.
    val nums = arrayOf(1, 2, 3, 4, 5)
    println(nums.contentToString())

//Создайте пустой массив строк размером 10 элементов.
    val emptyArray = Array(10) { "" }
    println(emptyArray.contentToString())

//Создайте массив из 5 элементов типа Double и заполните его значениями, являющимися удвоенным индексом элемента.
    val emptyDoubles = DoubleArray(5) { index -> index * 2.0 }
    println(emptyDoubles.contentToString())

//Создайте массив из 5 элементов типа Int. Используйте цикл, чтобы присвоить каждому элементу значение, равное его индексу, умноженному на 3.
    val arrayInt = IntArray(5) { index -> index * 3 }
    println(arrayInt.contentToString())

//Создайте массив из 3 nullable строк. Инициализируйте его одним null значением и двумя строками.
    val nullArray: Array<String?> = arrayOf(null, "One", "Two")
    println(nullArray.contentToString())

//Создайте массив целых чисел и скопируйте его в новый массив в цикле.
    val ogArray = intArrayOf(1, 2, 3, 4, 5)
    val copiedArray = IntArray(ogArray.size)
    for (i in ogArray.indices) {
        copiedArray[i] = ogArray[i]
    }
    println(copiedArray.contentToString())

//Создайте два массива целых чисел одинаковой длины. Создайте третий массив, вычев значения одного из другого.
    val array1 = arrayOf(5, 4, 3)
    val array2 = arrayOf(1, 2, 3)
    val array3 = IntArray(array1.size) { i -> array1[i] - array2[i] }
    println(array3.contentToString())

//Создайте массив целых чисел. Найдите индекс элемента со значением 5. Если значения 5 нет в массиве, возвращаем -1. Реши задачу через цикл while.
    val intArray2 = intArrayOf(1, 2, 5, 3, 4)
    var idx = 0
    var finIdx = -1
    while (idx < intArray2.size) {
        if (intArray2[idx] == 5) {
            finIdx = idx
            break
        }
        idx++
    }
    println(finIdx)

//Создайте массив целых чисел. Используйте цикл для перебора массива и вывода каждого элемента в консоль. Напротив каждого элемента должно быть написано “чётное” или “нечётное”.
    val unEvenInt = intArrayOf(1, 3, 4, 5, 6, 9)
    var idx1 = 0
    while (idx1 < unEvenInt.size) {
        if (unEvenInt[idx1] % 2 == 0) {
            println("${unEvenInt[idx1]} четное")
        }
        else {
            println("${unEvenInt[idx1]} нечетное")
        }
        idx1++
    }

//Создай функцию, которая принимает массив строк и строку для поиска. Функция должна находить в массиве элемент, в котором принятая строка является подстрокой (метод contains()). Верни найденный элемент из функции в виде строки.
fun eltFinder(array: Array<String>, searchString: String): String {
    for (elt in array) {
        if (elt.contains(searchString)) {
            return elt
        }
    }
    return "" //
}
    val someStrArray = arrayOf("Crying", "Screaming", "Shaking", "Throwing Up")
    val foundElts = eltFinder(someStrArray, "Up" )
    println(foundElts)


//Работа со списками List

//Создайте пустой неизменяемый список целых чисел.
    val readOnlyList: List<Int> = listOf()
    println(readOnlyList)

//Создайте неизменяемый список строк, содержащий три элемента (например, "Hello", "World", "Kotlin").
    val readOnlyList2: List<String> = listOf("Crying", "Shaking", "Throwing Up")
    println(readOnlyList2)

//Создайте изменяемый список целых чисел и инициализируйте его значениями от 1 до 5.
    val mutableList: MutableList<Int> = mutableListOf(1, 2, 3, 4, 5)
    println(mutableList)

//Имея изменяемый список целых чисел, добавьте в него новые элементы (например, 6, 7, 8).
    val mutableList1: MutableList<Int> = mutableListOf(1, 2, 3, 4, 5)
    mutableList1 += listOf(6, 7, 8)
    println(mutableList1)

//Имея изменяемый список строк, удалите из него определенный элемент (например, "World").
    val mutableList2: MutableList<String>  = mutableListOf("Bye-bye", "World")
    mutableList2.removeAt(1)
    println(mutableList2)

//Создайте список целых чисел и используйте цикл для вывода каждого элемента на экран.
    val numList = listOf(1, 2, 3, 4, 5)

    for (i in numList.indices) {
        print(numList[i])
        print(" ")
    }

//Создайте список строк и получите из него второй элемент, используя его индекс.
//Имея изменяемый список чисел, измените значение элемента на определенной позиции (например, замените элемент на позиции 2 на новое значение).
//Создайте два списка строк и объедините их в один новый список, содержащий элементы обоих списков. Реши задачу с помощью циклов.
//Создайте список целых чисел и найдите в нем минимальный и максимальный элементы используя цикл.
//Имея список целых чисел, создайте новый список, содержащий только четные числа из исходного списка используя цикл.
//Работа с Множествами Set
//Создайте пустое неизменяемое множество целых чисел.
//Создайте неизменяемое множество целых чисел, содержащее три различных элемента (например, 1, 2, 3).
//Создайте изменяемое множество строк и инициализируйте его несколькими значениями (например, "Kotlin", "Java", "Scala").
//Имея изменяемое множество строк, добавьте в него новые элементы (например, "Swift", "Go").
//Имея изменяемое множество целых чисел, удалите из него определенный элемент (например, 2).
//Создайте множество целых чисел и используйте цикл для вывода каждого элемента на экран.
//Создай функцию, которая принимает множество строк (set) и строку и проверяет, есть ли в множестве указанная строка. Нужно вернуть булево значение true если строка есть. Реши задачу через цикл.
//Создайте два множества строк и объедините их в одно новое множество, содержащее все уникальные элементы обоих множеств. Реши задачу с помощью циклов.
//Создайте два множества целых чисел и найдите их пересечение (общие элементы). Реши задачу через вложенные циклы.
//Создайте два множества строк и найдите разность первого множества относительно второго (элементы, присутствующие в первом множестве, но отсутствующие во втором). Реши задачу через вложенные циклы и переменные флаги.
//Создайте множество строк и конвертируйте его в список с использованием цикла.

}

