package ru.stimmax.ru.stimmax.lessons.lesson03.homework

class homework {

    // 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
    val eventName: String = "Hackathon to the MEGA"

    // 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var eventDate: String = "10 ноября 2025"

    // 3. Место проведения (публичная переменная, известная на момент написания, но может быть изменена из-за необходимости сменить локацию)
    var eventLocation: String = "Павильон «Экономика Москвы»"

    // 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы (приватная неизменяемая переменная - её не должны увидеть и бюджет уже запланирован и утверждён и не должен изменяться)
    private val itemizedBudget: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

    // 5. Количество участников (публичная изменяемая переменная — кол-во участников может измениться)
    var participantCount: Int = 200

    // 6. Длительность хакатона в часах (публичная неизменяемая переменная, фиксируется заранее)
    val eventDurationHrs: Int = 72

    // 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг (приватная неизменяемая переменная — контракты)
    private val vendorsInfo: String = "Контакты и условия"

    // 8. Текущее состояние хакатона (статус) (публичная изменяемая переменная, меняется по ходу хакатона)
    var hackathonStatus: String = "Prep"

    // 9. Список спонсоров (публичная изменяемая переменная, может пополняться)
    var sponsors: String = "Vasily Vasilyevich, Ivan Ivanovich"

    // 10. Бюджет мероприятия (публичная неизменяемая переменная - финализированная сумма, может быть публичной)
    val totalBudgetRub: Int = 4000000

    // 11. Текущий уровень доступа к интернету (публичная изменяемая переменная, которую мы изначально не знаем?)
    var speedNullable: Int? = null
    val speed: Int
        get() = requireNotNull(speedNullable) {
            "Speed has not been initialized"
        }

    // 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки (приватная изменяемая переменная для внутренней логистики)
    private var logisticsInfo: String = "Это туда, это сюда))"

    // 13. Количество команд (публичная изменяемая переменная, число может уточняться)
    var totalTeams: Int = 50

    // 14. Перечень задач (публичная изменяемая переменная, некий чеклист)
    var taskList: String = "Task 1, Task 2, Task 3..."

    // 15. План эвакуации (публичная неизменяемая переменная, план уже выбранной локации не меняется)
    val evacuationPlan: String = "https://www.howtogetouttahere.ru/plan"

    // 16. Список доступного оборудования (всё, что выделено для использования на мероприятии - публичная неизменяемая переменная, выделено фикс. кол-во)
    val totalEquipment: String = "Mouses [100], Laptops [100], Chargers [100]"

    // 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками - публичная изменяемая переменная, вычисляется на основе доступного и занятого оборудования)
    var freeEquipmentList: String
        // get() = calculateFreeEquipment() - вроде бы тут нужен геттер..

    // 18. График питания участников (публичная изменяемая переменная с отложенной инициализацией)
    lateinit var mealSchedule: String

    // 19. План мероприятий на случай сбоев (приватная неизменяемая переменная)
    private val emergencyPlan: String = "Что делать, кому звонить"

    // 20. Список экспертов и жюри (публичная изменяемая переменная, список может уточняться)
    var juryList: String = "Эксперт Василий, Эксперт Иванна"

    // 21. Политика конфиденциальности (публичная неизменяемая переменная, утверждённый док)
    val privacyPolicy: String = "https://hahakaton.ru/privacy"

    // 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем - приватная изменяемая переменная, так как отзывы добавляются в процессе мероприятия)
    private var privFeedback: String = "Отзыв 1, отзыв 2..."

    // 23. Текущая температура в помещении (публичная изменяемая переменная, температура может меняться. Возможно, аналогично пункту 11?)
    var currentTemperature: Int = 22

    // 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своими приложениями командами (приватная неизменяемая переменная)
    private val networkPerformanceAnalytics: String = "Данные, отчеты и т.д."

    // 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5 - приватная изменяемая переменная с валидацией)
    private var internetThrottleFactor: Double = 1.0
        set(value) {
            field = if (value in 0.1..1.0) value else 1.0
        }

    // 26. Уровень освещения в люксах (публичная изменяемая переменная)
    var lightingLevel: Int = 400

    // 27. Лог событий мероприятия (приватная изменяемая переменная, свой внутренний журнал)
    private var eventLog: String = ""

    // 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет) - публичная неизменяемая переменная, известна заранее)
    val hasMedicalSupport: Boolean = true

    // 29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций. (приватная неизменяемая переменная)
    private val safetyAndSecurityProcedures: String = "Протоколы, контакты срочных служб, планы.."

    // 30. Регистрационный номер мероприятия (публичная неизменяемая переменная)
    val registrationNumber: String = "1234567890"

    // 31. Максимально допустимый уровень шума в помещении хакатона в децибелах - публичная неизменяемая переменная, правило)
    val maxNoiseLevelDb: Int = 60

    // 32. Индикатор превышения уровня шума в помещениях (публичная изменяемая переменная)
    var isNoiseExceeded: Boolean = false

    // 33. План взаимодействия с прессой (публичная неизменяемая переменная)
    val pressPlan: String = "Как не опозориться"

    // 34. Детальная публичная информация о проектах каждой команды, сбор данных включает компиляцию кода и сбор статистики прогона автоматизированных проверок. (публичная лениво инициализируемая переменная — ресурсоёмко)
    val detailedProjectsPublicReport: String by lazy {
        //...
    }

    // 35. Статус получения всех необходимых разрешений для проведения мероприятия (приватная изменяемая переменная)
    private var permitsStatus: String = "Pending"

    // 36. Индикатор доступности специализированного оборудования в данный момент - публичная изменяемая переменная, зависит от текущего использования)
    var isSpecialEqAvailable: Boolean = true

    // 37. Список партнеров мероприятия (публичная неизменяемая переменная)
    val partners: String = "Kotlin Labs, Java Academy"

    // 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия)
    lateinit var finalReport: String


}

