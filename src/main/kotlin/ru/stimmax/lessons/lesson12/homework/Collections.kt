package ru.stimmax.ru.stimmax.lessons.lesson12.homework

fun main() {

    val numbers = listOf(-1, 2, -3, 4, -5, 8, 264, 2)
    val nullText = listOf(null, "one", "two", "three", "four", null)
    val text = listOf("one", "two", "three", "four")


//Реши задачи подходящим методом для работы с коллекцией. Для каждой задачи есть свой метод, не повторяйся. Список методов в рекомендациях под заданиями.

//Задачи на приведение коллекции к значению

// Проверить, что размер коллекции больше 5 элементов
    if (numbers.size > 5) {
        println("Размер коллекции больше 5")
    } else {
        println("Размер коллекции 5 или меньше")
    }

// Проверить, что коллекция пустая
    if (numbers.isEmpty()) {
        println("Коллекция пустая")
    } else {
        println("Коллекция не пустая")
    }

// Проверить, что коллекция не пустая
    if (numbers.isNotEmpty()) {
        println("Коллекция не пустая")
    } else {
        println("Коллекция пустая")
    }

// Взять элемент по индексу или создать значение если индекса не существует
    val element = numbers.getOrElse(10) { -1 }
    println("Элемент по индексу 10: $element")

// Собрать коллекцию в строку
    val joinedString = numbers.joinToString()
    println("Коллекция в строке: $joinedString")

// Посчитать сумму всех значений
    val sum = numbers.sum()
    println("Сумма всех значений: $sum")

// Посчитать среднее
    val average = numbers.average()
    println("Среднее значение: $average")

// Взять максимальное число
    val max = numbers.maxOrNull()
    println("Максимальное число: $max")

// Взять минимальное число
    val min = numbers.minOrNull()
    println("Минимальное число: $min")

// Взять первое число или null
    val first = numbers.firstOrNull()
    println("Первое число: $first")

// Проверить что коллекция содержит элемент
    if (numbers.contains(4)) {
        println("Коллекция содержит число 4")
    } else {
        println("Коллекция не содержит число 4")
    }

//Реши задачи подходящим методом для работы с коллекцией. Для каждой задачи есть свой метод, не повторяйся. Список методов в рекомендациях под заданиями.

//Задачи на обработку коллекций

// Отфильтровать коллекцию по диапазону 18-30
    val filteredByRange = numbers.filter { it in 18..30 }
    println("Фильтр по диапазону 18-30: $filteredByRange")

// Выбрать числа, которые не делятся на 2 и 3 одновременно
    val notDivisibleBy2And3 = numbers.filterNot { it % 2 == 0 && it % 3 == 0 }
    println("Не делятся на 2 и 3 одновременно: $notDivisibleBy2And3")

// Очистить текстовую коллекцию от null элементов
    val withoutNulls = nullText.filterNotNull()
    println("Без null элементов: $withoutNulls")

// Преобразовать текстовую коллекцию в коллекцию длин слов
    val wordLengths = text.map { it.length }
    println("Длины слов: $wordLengths")

// Преобразовать текстовую коллекцию в мапу, где ключи - перевёрнутые слова, а значения - длина слов
    val reversedWordsMap = text.associate { it.reversed() to it.length }
    println("Мапа перевернутых слов: $reversedWordsMap")

// Отсортировать список в алфавитном порядке
    val sortedAlphabetically = text.sorted()
    println("Отсортировано по алфавиту: $sortedAlphabetically")

// Взять первые 3 элемента списка
    val firstThree = text.take(3)
    println("Первые 3 элемента: $firstThree")

// Распечатать квадраты элементов списка
    print("Квадраты элементов: ")
    numbers.forEach { print("${it * it} ") }
    println()

// Группировать список по первой букве слов
    val groupedByFirstLetter = text.groupBy { it.first() }
    println("Группировка по первой букве: $groupedByFirstLetter")

// Очистить список от дублей
    val uniqueNumbers = numbers.distinct()
    println("Уникальные числа: $uniqueNumbers")

// Отсортировать список по убыванию
    val sortedDescending = numbers.sortedDescending()
    println("Отсортировано по убыванию: $sortedDescending")

// Взять последние 3 элемента списка
    val lastThree = text.takeLast(3)
    println("Последние 3 элемента: $lastThree")

//Реши задачи ниже в отдельных функциях.

//Задача 24. Характеристика числовой коллекции

//Напиши функцию, которая принимает коллекцию чисел и возвращает строку с характеристикой коллекции используя конструкцию when

//    Если коллекция пустая - "Пусто"
//    Если количество элементов меньше пяти - "Короткая"
//    Если коллекция начинается с 0 - "Стартовая"
//    Если сумма всех чисел больше 10000 - "Массивная"
//    Если среднее значение равно 10 - "Сбалансированная"
//    Если длина строки образованная склеиванием коллекции в строку равна 20 - "Клейкая"
//    Если максимальное число меньше -10 - "Отрицательная"
//    Если минимальное число больше 1000 - "Положительная"
//    Если содержит одновременно числа 3 и 14 - "Пи***тая"
//    Иначе - "Уникальная"

//Вызвать метод с данными, подходящими под каждую из веток

//Задача 25. Анализ учебных оценок

//Напиши функцию, которая принимает список чисел и возвращает список чисел.

//Пример данных: val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)

//Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3. Вызывай методы обработки и фильтрации последовательно один из другого, чтобы результат предыдущего метода являлся основой для следующего.

//Задача 26. Создание каталога по первой букве

//Напиши функцию, которая принимает список строк и возвращает словарь с ключом - буквой и значением - строкой.

//Начальные значения: val list = listOf(
//"Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик", "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра", "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка", "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка"
//)

//Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве используя метод groupBy

//Задание 27. Подсчёт средней длины слов в списке

//Напиши функцию, которая принимает список строк и возвращает строку.

//Начальные значения взять из предыдущей задачи.

//Цель: Перевести все слова в количество букв, подсчитать среднее значение. Вернуть форматированный текст с двумя знаками после запятой, используя функцию format и подходящий шаблон.

//Задание 28: Категоризация чисел

//Напиши функцию, которая принимает список чисел и возвращает словарь с ключами - строками и значениями - числами.

//Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)

//Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности ("четные" и "нечетные").

//Задание 29: Поиск первого подходящего элемента

//Напиши функцию, которая принимает список чисел и число и возвращает nullable число.

//Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60) и число для проверки возраста, например 18.

//Цель: Найти первый возраст в списке, который соответствует условию (больше второго аргумента) и вернуть его, либо null если значения не нашлось.

}